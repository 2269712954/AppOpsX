#!/sbin/sh

tmp=/tmp/appopsx
ifw_base=/data/system/ifw
ifw_meta="$ifw_base/metadata"

if [ "$3" ]; then
    zip=$3
    console=/proc/$$/fd/$2
    # write the location of the console buffer to /tmp/console for other scripts to use
    echo "$console" > /tmp/console
else
    console=$(cat /tmp/console)
    [ "$console" ] || console=/proc/$$/fd/1
fi

print() {
    if [ "$1" ]; then
        echo "ui_print $1" > "$console"
    else
        echo "ui_print  " > "$console"
    fi
    echo
}

abort() {
    [ "$1" ] && {
        print "Error: $1"
        print "Aborting..."
    }
    cleanup
    print "Failed to install AppOpsX!"
    exit 1
}

cleanup() {
    [ "$zip" ] && rm /tmp/console
    [ -d "$tmp" ] && rm -rf "$tmp"
}

extract() {
    rm -rf "$2"
    mkdir -p "$2"
    unzip -o "$1" -d "$2" || abort "Failed to extract zip to $2!"
}

setperm() {
    find "$3" -type d -exec chmod "$1" {} \;
    find "$3" -type f -exec chmod "$2" {} \;
}

rmcache() {
    f="$1"
    [ -d /data/dalvik-cache/ ] || return 0
    app="$(echo $f | tr / @ | cut -c2-)"
    [ -z "$app" ] && return 0
    app="${app}@"
    find /data/dalvik-cache/ -iname "${app}*" |
        while read i; do
            j="$(basename $i)"
            print "Clean cache: ${j/${app}/}"
            rm -f "$i"
        done
}

print "*********************"
print "* AppOpsX Installer *"
print "*********************"

print "Mounting filesystems..."
mount /system
if mount | grep ro | grep -q /system; then
    mount -o remount,rw /system || print "Failed to mount read-write!"
    print 'Remount as read-write...'
fi

print "Setting up ifw directory..."
if ! [ -d $ifw_base ]; then
    mkdir -p $ifw_base
    chown system:system $ifw_base
    chmod 700 $ifw_base
    print "Created ifw folder"
fi
rm -rf "$ifw_meta"
touch "$ifw_meta"
chown 0:0 "$ifw_meta"
chmod 600 "$ifw_meta"
[ -f "$ifw_meta" ] && print "Created fake ifw metadata" || abort "Failed to setup ifw"

[ "$zip" ] && {
    extract "$zip" "$tmp"
}
cd "$tmp"

app_list=""
for f in ./system/priv-app/*; do
    app_list="${app_list} /system/priv-app/$(basename $f)"
done

print "Clean files..."
rm -rf $app_list

print "Adding files..."
cp -R ./system/priv-app/* /system/priv-app/ || abort "Failed copy apps"

print "Setting correct permissions..."
for f in $app_list; do
    print "Fixing permission: $f"
    setperm 0755 0644 $f
    rmcache $f
done

umount /system
cleanup
print "Finished!"
